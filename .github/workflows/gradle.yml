name: CI + release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set environment CI_ variables
        id: ci-env
        uses: FranzDiebold/github-env-vars-action@v2

      - name: Get next version tag
        id: get_version
        run: |
          current_version=$(jq -r '.latestVersion' ripme.json)
          version_base=$(echo "$current_version" | cut -d '-' -f1)
          commit_count=$(git rev-list --count HEAD)
          commit_sha=$(git rev-parse --short HEAD)
          next_version="$version_base-$commit_count-$commit_sha"
          echo "next_version=$next_version" >> $GITHUB_OUTPUT

      - name: Set up Java
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 17
          distribution: zulu
          cache: gradle

      - name: Build with Gradle
        run: gradle clean assemble -PjavacRelease=17

      - name: Rename JAR
        id: rename
        run: |
          mkdir -p dist
          new_name="ripme-${{ steps.get_version.outputs.next_version }}.jar"
          cp build/libs/*.jar dist/$new_name
          echo "version_tag=${{ steps.get_version.outputs.next_version }}" >> $GITHUB_OUTPUT

      - name: Generate ripme.json
        run: |
          echo '{
            "version": "${{ steps.get_version.outputs.next_version }}",
            "url": "https://github.com/${{ github.repository }}/releases/download/${{ steps.rename.outputs.version_tag }}/${{ steps.rename.outputs.version_tag }}.jar"
          }' > dist/ripme.json

      - name: Commit and tag version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

          # Avoid rebase conflict by resetting to origin/main
          git fetch origin main
          git reset --hard origin/main

          # Commit version update
          git add dist/ripme.json
          git commit -m "Update ripme.json for ${{ steps.get_version.outputs.next_version }}" || echo "No changes to commit"

          # Push to main
          git push origin main

          # Tag current commit
          git tag v${{ steps.get_version.outputs.next_version }}
          git push origin v${{ steps.get_version.outputs.next_version }}

      - name: Publish release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.get_version.outputs.next_version }}"
          prerelease: false
          title: "${{ steps.get_version.outputs.next_version }}"
          files: |
            dist/*.jar
            dist/ripme.json